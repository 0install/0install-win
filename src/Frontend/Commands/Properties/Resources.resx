<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AliasCreated" xml:space="preserve">
    <value>An alias named '{0}' for '{1}' was created.</value>
  </data>
  <data name="AliasCreatedReopenTerminal" xml:space="preserve">
    <value>An alias named '{0}' for '{1}' was created.
You may have to close and reopen your terminal for this to become effective.</value>
  </data>
  <data name="AliasNotFound" xml:space="preserve">
    <value>No existing alias named '{0}' was found.</value>
  </data>
  <data name="AliasRemoved" xml:space="preserve">
    <value>The alias named '{0}' for '{1}' was removed.</value>
  </data>
  <data name="AllComponentsDownloaded" xml:space="preserve">
    <value>All required components have been downloaded.</value>
  </data>
  <data name="AlreadyInImplDirs" xml:space="preserve">
    <value>'{0}' is already in the list of custom implementation caches.</value>
  </data>
  <data name="AppAlias" xml:space="preserve">
    <value>Application alias</value>
  </data>
  <data name="AppList" xml:space="preserve">
    <value>Application list</value>
  </data>
  <data name="AskUpdateCapabilities" xml:space="preserve">
    <value>Do you wish to update any existing desktop integration to reflect this?
If you select 'Yes' potentially incompatible integrations will be removed.
If you select 'No' Zero Install will continue to use the old capabilities.</value>
  </data>
  <data name="CachedImplementations" xml:space="preserve">
    <value>Cached implementations</value>
  </data>
  <data name="CachedInterfaces" xml:space="preserve">
    <value>Cached interfaces</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CapabilitiesChanged" xml:space="preserve">
    <value>The capabilities of the application '{0}' have changed.</value>
  </data>
  <data name="CatalogAlreadyRegistered" xml:space="preserve">
    <value>The catalog URI {0} is already registered.</value>
  </data>
  <data name="CatalogNotRegistered" xml:space="preserve">
    <value>The catalog URI {0} is not registered.</value>
  </data>
  <data name="CatalogSources" xml:space="preserve">
    <value>Catalog sources</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="ChangesFound" xml:space="preserve">
    <value>Changes found</value>
  </data>
  <data name="CheckingFeed" xml:space="preserve">
    <value>Checking feed</value>
  </data>
  <data name="CheckingForUpdates" xml:space="preserve">
    <value>Checking for updates</value>
  </data>
  <data name="ClickToChoose" xml:space="preserve">
    <value>Click here to choose.</value>
  </data>
  <data name="CommandLineArguments" xml:space="preserve">
    <value>Command-line arguments:</value>
  </data>
  <data name="Configuration" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="ConfirmPurge" xml:space="preserve">
    <value>Do you wish to remove all application files from the Zero Install cache?
These files can downloaded again if needed.</value>
  </data>
  <data name="ConfirmRemoveAll" xml:space="preserve">
    <value>Do you wish to remove all applications from the 'My applications' list? This prevents leftover menu entries after removing Zero Install.
You can create a backup of this list by using '0install sync'.</value>
  </data>
  <data name="DataGridCommandAccessPointHelp" xml:space="preserve">
    <value>Start entering text in the last line to create a new entry.
Select an entire line by clicking in the first column and then press DEL on the keyboard to remove an entry.</value>
  </data>
  <data name="DataGridDefaultAccessPointHelp" xml:space="preserve">
    <value>Set a checkbox to make a capability your desired default handler.
Remove a checkbox to remove a capability's default status (it still remains available).</value>
  </data>
  <data name="DeleteCheckedEntries" xml:space="preserve">
    <value>Do you want to delete the {0} checked element(s) from the cache?</value>
  </data>
  <data name="DeleteEntry" xml:space="preserve">
    <value>Do you want to delete this entry from the cache?</value>
  </data>
  <data name="DeletingDirectory" xml:space="preserve">
    <value>Deleting directory</value>
  </data>
  <data name="DeletingEntries" xml:space="preserve">
    <value>Deleting entries</value>
  </data>
  <data name="DeletingImplementations" xml:space="preserve">
    <value>Deleting implementation</value>
  </data>
  <data name="DescriptionAddAlias" xml:space="preserve">
    <value>Create an alias for launching an application via 0install without always having to enter the full URI.</value>
  </data>
  <data name="DescriptionAddApp" xml:space="preserve">
    <value>Add an application to the application list.</value>
  </data>
  <data name="DescriptionAddFeed" xml:space="preserve">
    <value>Register an additional source of implementations (versions) of a program.</value>
  </data>
  <data name="DescriptionCatalogAdd" xml:space="preserve">
    <value>Adds an URI to the list of catalogs.</value>
  </data>
  <data name="DescriptionCatalogList" xml:space="preserve">
    <value>Lists all registered catalogs.</value>
  </data>
  <data name="DescriptionCatalogRefresh" xml:space="preserve">
    <value>Refreshes (downloads) all registered catalogs.</value>
  </data>
  <data name="DescriptionCatalogRemove" xml:space="preserve">
    <value>Removes an URI from the list of catalogs.</value>
  </data>
  <data name="DescriptionCatalogReset" xml:space="preserve">
    <value>Resets the list of catalogs to the default source.</value>
  </data>
  <data name="DescriptionCatalogSearch" xml:space="preserve">
    <value>Searches registered catalogs for applications that match the specified query. If no query is given all applications in the catalogs are listed.</value>
  </data>
  <data name="DescriptionCentral" xml:space="preserve">
    <value>Opens the central graphical user interface for launching and managing applications.</value>
  </data>
  <data name="DescriptionConfig" xml:space="preserve">
    <value>View or change configuration settings.
With no arguments, it displays all settings and their current values. With one argument, it displays the current value of the named setting. With two arguments, it sets the setting to the given value or resets it to the default value if the value "default" is given.</value>
  </data>
  <data name="DescriptionDigest" xml:space="preserve">
    <value>Calculates the manifest digest of a directory or archive.</value>
  </data>
  <data name="DescriptionDownload" xml:space="preserve">
    <value>Behaves similarly to '0install select', except that it also downloads the selected versions if they are not already cached.
Returns an exit status of 0 if it selected a suitable set of versions and they are now all downloaded and in the cache; returns a status of 1 otherwise.</value>
  </data>
  <data name="DescriptionImport" xml:space="preserve">
    <value>Imports a feed from a local file, as if it had been downloaded from the network. This is useful when testing a feed file, to avoid uploading it to a remote server in order to download it again.
The file must have a trusted digital signature, as when fetching from the network.</value>
  </data>
  <data name="DescriptionImportApps" xml:space="preserve">
    <value>Imports a set of applications and desktop integrations from an existing app-list.xml file.</value>
  </data>
  <data name="DescriptionIntegrateApp" xml:space="preserve">
    <value>Adds an application to the application list (if missing) and integrate it into the desktop environment.</value>
  </data>
  <data name="DescriptionList" xml:space="preserve">
    <value>Lists all locally known feed URIs. If a search term is given, only URIs containing that string are shown (case insensitive).</value>
  </data>
  <data name="DescriptionListApps" xml:space="preserve">
    <value>Lists all applications currently in your application list. If a search term is given, only application names containing that string are shown (case insensitive).</value>
  </data>
  <data name="DescriptionListFeeds" xml:space="preserve">
    <value>Lists all extra feeds added to URI using '0install add-feed'.</value>
  </data>
  <data name="DescriptionRemoveAllApps" xml:space="preserve">
    <value>Removes all applications from the application list and undoes any desktop environment integration. Use this command to clean up the system before removing Zero Install.</value>
  </data>
  <data name="DescriptionRemoveApp" xml:space="preserve">
    <value>Removes an application from the application list and undoes any desktop environment integration.</value>
  </data>
  <data name="DescriptionRemoveFeed" xml:space="preserve">
    <value>Un-registers a feed, reversing the effect of '0install add-feed'.</value>
  </data>
  <data name="DescriptionRepairApps" xml:space="preserve">
    <value>Reapplies all desktop integrations of applications in the application list.</value>
  </data>
  <data name="DescriptionRun" xml:space="preserve">
    <value>Behaves similarly to '0install download', except that it also runs the program after ensuring it is in the cache.
Returns an exit status of 1 if the download step failed. Otherwise, the exit status will be the exit status of the program being run.</value>
  </data>
  <data name="DescriptionSearch" xml:space="preserve">
    <value>Searches for feeds indexed by the mirror server that match specified keywords. Note that the default mirror server indexes all known feeds, regardless of quality; you must decide whether to trust the programs before running them.</value>
  </data>
  <data name="DescriptionSelect" xml:space="preserve">
    <value>Selects a version of the program identified by URI, and compatible versions of all of its dependencies.
Returns an exit status of zero if it selected a set of versions, and a status of 1 if it could not find a consistent set.</value>
  </data>
  <data name="DescriptionSelfUpdate" xml:space="preserve">
    <value>Updates Zero Install itself to the most recent version.</value>
  </data>
  <data name="DescriptionStoreAdd" xml:space="preserve">
    <value>Adds the contents of a directory or archive to the cache.</value>
  </data>
  <data name="DescriptionStoreAddDir" xml:space="preserve">
    <value>Adds a directory to the list of custom implementation caches.</value>
  </data>
  <data name="DescriptionStoreAudit" xml:space="preserve">
    <value>Checks that all implementations in the cache are undamaged.
Additional arguments specify custom cache locations.</value>
  </data>
  <data name="DescriptionStoreCopy" xml:space="preserve">
    <value>Copies an implementation into the cache. Similar to '0install store add', but the digest is extracted from the directory name.
An additional arguments specifies a custom target cache location.</value>
  </data>
  <data name="DescriptionStoreExport" xml:space="preserve">
    <value>Exports a cached implementation as an archive (ZIP, TAR, etc.). The result can be imported on another machine using '0install store add'.</value>
  </data>
  <data name="DescriptionStoreFind" xml:space="preserve">
    <value>Determines the local path of a cached implementation.</value>
  </data>
  <data name="DescriptionStoreList" xml:space="preserve">
    <value>Lists all implementation cache directories.</value>
  </data>
  <data name="DescriptionStoreListImplementations" xml:space="preserve">
    <value>Lists all cached implementations. If a feed URI is specified only implementations for that particular feed are listed.</value>
  </data>
  <data name="DescriptionStoreManage" xml:space="preserve">
    <value>Displays a graphical user interface for managing implementations in the cache. Shows associations with cached feeds.</value>
  </data>
  <data name="DescriptionStoreOptimise" xml:space="preserve">
    <value>Saves disk space by merging identical files with hardlinks.
Additional arguments specify custom cache locations.</value>
  </data>
  <data name="DescriptionStorePurge" xml:space="preserve">
    <value>Removes all implementations from the cache. Use this command to clean up the system before removing Zero Install. Deleting cache directories manually may be difficult due to the NTFS ACLs employed to protect implementations against modification.
Additional arguments specify custom cache locations.</value>
  </data>
  <data name="DescriptionStoreRemove" xml:space="preserve">
    <value>Removes an implementation from the cache.</value>
  </data>
  <data name="DescriptionStoreRemoveDir" xml:space="preserve">
    <value>Removes a directory from the list of custom implementation caches.</value>
  </data>
  <data name="DescriptionStoreVerify" xml:space="preserve">
    <value>Makes sure an implementation have not been damaged (i.e. it manifest digest has not changed).</value>
  </data>
  <data name="DescriptionSync" xml:space="preserve">
    <value>Synchronizes the application list with the server.</value>
  </data>
  <data name="DescriptionUpdate" xml:space="preserve">
    <value>Checks for updates to the program and download them if found.
This is similar to '0install download --refresh', except that it prints information about whether any changes were found.</value>
  </data>
  <data name="DescriptionUpdateApps" xml:space="preserve">
    <value>Updates all applications in the application list.</value>
  </data>
  <data name="DesktopIntegration" xml:space="preserve">
    <value>Desktop integration</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="DownloadComplete" xml:space="preserve">
    <value>Download complete</value>
  </data>
  <data name="EnterCatalogUrl" xml:space="preserve">
    <value>Please enter the URL or local file path of the feed catalog to add:</value>
  </data>
  <data name="EnterFeedUrl" xml:space="preserve">
    <value>Please enter the URL of the new source of implementations for this interface:</value>
  </data>
  <data name="ExclusiveOptions" xml:space="preserve">
    <value>The options {0} and {1} cannot be used together.</value>
  </data>
  <data name="FeedAlreadyRegistered" xml:space="preserve">
    <value>The feed was already registered for all appropriate interfaces.</value>
  </data>
  <data name="FeedManagement" xml:space="preserve">
    <value>Feed management</value>
  </data>
  <data name="FeedNotRegistered" xml:space="preserve">
    <value>The feed was not registered for any interfaces.</value>
  </data>
  <data name="FeedRegistered" xml:space="preserve">
    <value>The feed was successfully registered for the following interfaces:</value>
  </data>
  <data name="FeedReplaced" xml:space="preserve">
    <value>'{0}' has been replaced by '{1}'. Consider updating.</value>
  </data>
  <data name="FeedReplacedAsk" xml:space="preserve">
    <value>The feed for '{0}' ({1}) has been replaced by '{2}'. Do you want to use the new feed instead?</value>
  </data>
  <data name="FeedsCached" xml:space="preserve">
    <value>Cached feeds</value>
  </data>
  <data name="FeedsRegistered" xml:space="preserve">
    <value>Feeds registered for '{0}'</value>
  </data>
  <data name="FeedUnregistered" xml:space="preserve">
    <value>The feed was successfully unregistered for the following interfaces:
{0}</value>
  </data>
  <data name="FileOrDirNotFound" xml:space="preserve">
    <value>Unable to find file or directory '{0}'.</value>
  </data>
  <data name="FilePrefixAbsoluteUsage" xml:space="preserve">
    <value>Use file:///path for absolute paths, not file:/path.</value>
  </data>
  <data name="Hide" xml:space="preserve">
    <value>Hide</value>
  </data>
  <data name="IgnoreMissingFeedFor" xml:space="preserve">
    <value>This feed does not seem to be for the same application. Add it anyway?
A &lt;feed-for&gt; tag indicates feed compatibility.</value>
  </data>
  <data name="Integrate" xml:space="preserve">
    <value>Integrate {0}</value>
  </data>
  <data name="IntegrateAppInvalid" xml:space="preserve">
    <value>Your desktop integration selections can not be applied.</value>
  </data>
  <data name="IntegrateAppRetry" xml:space="preserve">
    <value>Do you want to change your selection and try again?</value>
  </data>
  <data name="IntegrateAppUseGui" xml:space="preserve">
    <value>Please use the GUI version of Zero Install or specify explicit integration options using command-line arguments.</value>
  </data>
  <data name="InvalidArgument" xml:space="preserve">
    <value>Invalid argument '{0}'.</value>
  </data>
  <data name="LicenseInfo" xml:space="preserve">
    <value>This program comes with ABSOLUTELY NO WARRANTY, to the extent permitted by law.
You may redistribute copies of this program under the terms of the GNU Lesser General Public License.</value>
  </data>
  <data name="LocalPathOf" xml:space="preserve">
    <value>Local path of {0}</value>
  </data>
  <data name="MissingArguments" xml:space="preserve">
    <value>Missing arguments.</value>
  </data>
  <data name="MissingFeedFor" xml:space="preserve">
    <value>Missing &lt;feed-for&gt; element in '{0}'; it can't be used as a feed for any other interface.</value>
  </data>
  <data name="MissingOptionValue" xml:space="preserve">
    <value>Missing required value for option {0}.</value>
  </data>
  <data name="MustBeAdminForMachineWide" xml:space="preserve">
    <value>You must be an administrator to perform machine-wide operations.</value>
  </data>
  <data name="MyApps" xml:space="preserve">
    <value>My applications</value>
  </data>
  <data name="NoApiHookingNonCacheImpl" xml:space="preserve">
    <value>API hooking not possible due to non-cached implementation.</value>
  </data>
  <data name="NoIntegrationFromTransientInstall" xml:space="preserve">
    <value>Zero Install is currently running in portable mode or was launched from a cache directory. This makes it impossible to create desktop integration entries because they need to point to a permanent Zero Install location.</value>
  </data>
  <data name="NoLongerUsed" xml:space="preserve">
    <value>No longer used: </value>
  </data>
  <data name="NoModifySelectionsInCli" xml:space="preserve">
    <value>The graphical policy editor is not available in command-line mode.</value>
  </data>
  <data name="NoPerUserMachineWide" xml:space="preserve">
    <value>Zero Install is currently running from a user-specific directory that cannot be access by other users.</value>
  </data>
  <data name="NoPerUserMachineWideUse" xml:space="preserve">
    <value>Please use this command instead for the machine-wide operation: {0}</value>
  </data>
  <data name="NoRunWithEmptyCommand" xml:space="preserve">
    <value>When running an implementation the command may not be empty.</value>
  </data>
  <data name="NoSelectionsDocumentUpdate" xml:space="preserve">
    <value>Can only update with Feed URIs, not with selections documents.</value>
  </data>
  <data name="NotAvailableInPortableMode" xml:space="preserve">
    <value>This operation is not available in portable mode.</value>
  </data>
  <data name="NotInImplDirs" xml:space="preserve">
    <value>'{0}' is not in the list of custom implementation cacges.</value>
  </data>
  <data name="NoUpdatesFound" xml:space="preserve">
    <value>No updates found</value>
  </data>
  <data name="OpenInFileManager" xml:space="preserve">
    <value>&amp;Open in file manager</value>
  </data>
  <data name="OptimiseComplete" xml:space="preserve">
    <value>Optimization complete</value>
  </data>
  <data name="OptionAlgorithm" xml:space="preserve">
    <value>The {HASH} algorithm to use for the digest.</value>
  </data>
  <data name="OptionAliasRemove" xml:space="preserve">
    <value>Remove an existing alias.</value>
  </data>
  <data name="OptionAliasResolve" xml:space="preserve">
    <value>Print the interface URI for the given alias.</value>
  </data>
  <data name="OptionBackground" xml:space="preserve">
    <value>Hide the graphical user interface and use something like a tray icon instead. Has no effect in command-line mode.</value>
  </data>
  <data name="OptionBatch" xml:space="preserve">
    <value>Run in batch mode: don't display progress reports to the user and answer questions with default answers.</value>
  </data>
  <data name="OptionBefore" xml:space="preserve">
    <value>Require a version of the main program earlier than {VERSION}. i.e., force the use of an old version the program.</value>
  </data>
  <data name="OptionCatalogAddSkipVerify" xml:space="preserve">
    <value>Skip downloading the catalog to verify it is valid before adding it to the list.</value>
  </data>
  <data name="OptionClean" xml:space="preserve">
    <value>Remove implementations no longer required after the update.</value>
  </data>
  <data name="OptionCommand" xml:space="preserve">
    <value>Instead of executing the default command, use {COMMAND} instead. Possible command names are defined in the program's interface.
Set to empty ("") to ignore the command during selection.</value>
  </data>
  <data name="OptionConfigTab" xml:space="preserve">
    <value>Switch to a specific tab in the configuration GUI. Possible {TAB}s are 'updates', 'storage', 'catalog', 'trust', 'sync' and 'advanced'.
Has no effect in text-mode.</value>
  </data>
  <data name="OptionCpu" xml:space="preserve">
    <value>Forces the solver to target a specific {CPU}.</value>
  </data>
  <data name="OptionCustomize" xml:space="preserve">
    <value>Show the graphical policy editor. This allows you to customize which version of a program or library to use.</value>
  </data>
  <data name="OptionDigest" xml:space="preserve">
    <value>Display the manifest's digest (enabled by default if --manifest is not set).</value>
  </data>
  <data name="OptionForceSelfUpdate" xml:space="preserve">
    <value>Perform the update even if the currently installed version is the same or newer.</value>
  </data>
  <data name="OptionHelp" xml:space="preserve">
    <value>Show the built-in help text.</value>
  </data>
  <data name="OptionIntegrateAdd" xml:space="preserve">
    <value>Add all access points of a specific {CATEGORY}.</value>
  </data>
  <data name="OptionIntegrateAddAll" xml:space="preserve">
    <value>Add all available access points.</value>
  </data>
  <data name="OptionIntegrateAddStandard" xml:space="preserve">
    <value>Add the recommended standard access points.</value>
  </data>
  <data name="OptionIntegrateRemove" xml:space="preserve">
    <value>Remove all access points of a specific {CATEGORY}.</value>
  </data>
  <data name="OptionIntegrateRemoveAll" xml:space="preserve">
    <value>Remove all access points.</value>
  </data>
  <data name="OptionLanguage" xml:space="preserve">
    <value>Specifies the preferred language for the implementation. Use ISO short language codes (e.g. en or en-US).
You can use this option multiple times to specify multiple acceptable languages.</value>
  </data>
  <data name="OptionMachine" xml:space="preserve">
    <value>Apply the configuration machine-wide (for the entire computer) instead of just for the current user.</value>
  </data>
  <data name="OptionMain" xml:space="preserve">
    <value>Run the specified executable {MAIN} instead of the default. If it starts with '/' or '\' then the path is relative to the implementation's top-level directory, whereas otherwise it is relative to the directory containing the default main program.
May not contain command-line arguments! Whitespaces do not need to be escaped.</value>
  </data>
  <data name="OptionMan" xml:space="preserve">
    <value>Display more comprehensive documentation for the operation modes.</value>
  </data>
  <data name="OptionManifest" xml:space="preserve">
    <value>Display the manifest itself (one line for each file or directory).</value>
  </data>
  <data name="OptionNoDownload" xml:space="preserve">
    <value>Do not download the application itself yet. Will be automatically downloaded on first use instead.</value>
  </data>
  <data name="OptionNotBefore" xml:space="preserve">
    <value>Require a version of the main program not earlier than {VERSION}. E.g., if you want to run version 2.0 or later, use --not-before=2.0.</value>
  </data>
  <data name="OptionNoWait" xml:space="preserve">
    <value>Immediately returns once the chosen program has been launched instead of waiting for it to finish executing. On Windows the exit code is the process ID of the launched program.</value>
  </data>
  <data name="OptionOffline" xml:space="preserve">
    <value>Run in off-line mode, overriding the default setting.
In off-line mode, no interfaces are refreshed even if they are out-of-date, and newer versions of programs won't be downloaded even if the injector already knows about them (e.g. from a previous refresh).</value>
  </data>
  <data name="OptionOS" xml:space="preserve">
    <value>Forces the solver to target the operating system {OS}.</value>
  </data>
  <data name="OptionRefresh" xml:space="preserve">
    <value>Fetch fresh copies of all used feeds.</value>
  </data>
  <data name="OptionRestartCentral" xml:space="preserve">
    <value>Restart the '0install central' GUI after the update.</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Options:</value>
  </data>
  <data name="OptionShow" xml:space="preserve">
    <value>Show where the selected components are stored on the disk.</value>
  </data>
  <data name="OptionSource" xml:space="preserve">
    <value>Select source code rather than a binary. This is used internally by '0compile'.</value>
  </data>
  <data name="OptionSyncReset" xml:space="preserve">
    <value>Reset the synchronization data. Possible {MODE}s are 'none' (merge data from client and server normally), 'client' (replace all data on client with data from server) and 'server' (replace all data on server with data from client).</value>
  </data>
  <data name="OptionVerbose" xml:space="preserve">
    <value>More verbose output. Use twice for even more verbose output.</value>
  </data>
  <data name="OptionVersion" xml:space="preserve">
    <value>Display version information.</value>
  </data>
  <data name="OptionVersionRange" xml:space="preserve">
    <value>Require a version of the main program within the given {RANGE}.
Ranges are separated by pipes (|).
Each range is in the form "START..!END". The range matches versions where START &lt;= VERSION &lt; END. The start or end may be omitted.
A single version number may be used instead of a range to match only that version, or !VERSION to match everything except that version.</value>
  </data>
  <data name="OptionVersionRangeFor" xml:space="preserve">
    <value>Specifies the version {1:RANGE} for any library or sub-component with the given {0:URI} (as for --version).</value>
  </data>
  <data name="OptionWithStore" xml:space="preserve">
    <value>Add {DIR} to the list of implementation caches to search.
However, new downloads will not be written to this directory.</value>
  </data>
  <data name="OptionWrapper" xml:space="preserve">
    <value>Instead of executing the chosen program directly, run {COMMAND} PROGRAM ARGS. This is useful for running debuggers and tracing tools on the program (rather than on Zero Install!).
Note that the wrapper is executed in the environment selected by the program; hence, this mechanism cannot be used for sandboxing.
May contain command-line arguments. Whitespaces must be escaped!</value>
  </data>
  <data name="OptionXml" xml:space="preserve">
    <value>Write selected versions to console as machine-readable XML.</value>
  </data>
  <data name="PleaseRunInstaller" xml:space="preserve">
    <value>Please run http://0install.de/files/zero-install.exe to fix the issue.</value>
  </data>
  <data name="PortableMode" xml:space="preserve">
    <value>Portable mode</value>
  </data>
  <data name="PropertiesFor" xml:space="preserve">
    <value>Properties for {0}</value>
  </data>
  <data name="ReadingCache" xml:space="preserve">
    <value>Reading cache</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="RemoveCheckedKeys" xml:space="preserve">
    <value>Do you want to remove the {0} checked keys from the list?</value>
  </data>
  <data name="RemoveSelectedEntries" xml:space="preserve">
    <value>Do you want to remove the {0} selected entries from the list?</value>
  </data>
  <data name="RemovingApplications" xml:space="preserve">
    <value>Removing applications</value>
  </data>
  <data name="RemovingOutdated" xml:space="preserve">
    <value>Removing outdated implementations</value>
  </data>
  <data name="ResetList" xml:space="preserve">
    <value>Do you want to reset the list to its original state?</value>
  </data>
  <data name="ResolvedUsingCatalog" xml:space="preserve">
    <value>Resolved '{0}' to '{1}' using a catalog.</value>
  </data>
  <data name="SelectedImplementations" xml:space="preserve">
    <value>Selected implementations</value>
  </data>
  <data name="SelfUpdateAvailable" xml:space="preserve">
    <value>An update to Zero Install v{0} is available. Install now?</value>
  </data>
  <data name="SelfUpdateBlocked" xml:space="preserve">
    <value>This Zero Install instance was launched as an implementation by another Zero Install instance. It therefore cannot update itself.</value>
  </data>
  <data name="StabilityPolicyAutoSet" xml:space="preserve">
    <value>Set stability policy for {0} to match?</value>
  </data>
  <data name="StabilityPolicyReset" xml:space="preserve">
    <value>Reset stability policy for {0} to default?</value>
  </data>
  <data name="StabilityPolicySingleImplementation" xml:space="preserve">
    <value>There is only a single implementation in the feed. It has a stability rating of '{0}'.</value>
  </data>
  <data name="StorageReclaimed" xml:space="preserve">
    <value>{0} storage space reclaimed.</value>
  </data>
  <data name="StoreAudit" xml:space="preserve">
    <value>Store audit</value>
  </data>
  <data name="StoreVerfiyTryAuditInstead" xml:space="preserve">
    <value>Use "0store audit" instead to check all implementations in the store.</value>
  </data>
  <data name="SuccessfullyRemoved" xml:space="preserve">
    <value>Successfully removed {0}.</value>
  </data>
  <data name="SupportedValues" xml:space="preserve">
    <value>Supported values: {0}</value>
  </data>
  <data name="SyncCryptoKeyDescription" xml:space="preserve">
    <value>The crypto key is used to encrypt your data locally before transmitting it to the server.
Keep this key secret and use something different for your password. This way nobody can access your data, even if the server were to be compromised.</value>
  </data>
  <data name="TooManyArguments" xml:space="preserve">
    <value>Too many arguments or unknown options.</value>
  </data>
  <data name="Try0installWin" xml:space="preserve">
    <value>Try using the command '0install-win' instead of '0install'.</value>
  </data>
  <data name="TryHelp" xml:space="preserve">
    <value>Try {0} --help</value>
  </data>
  <data name="TryHelpWith" xml:space="preserve">
    <value>Try --help with one of these:</value>
  </data>
  <data name="UnableToLoadFeed" xml:space="preserve">
    <value>Unable to load feed '{0}'; skipping.</value>
  </data>
  <data name="UnknownCommand" xml:space="preserve">
    <value>Unknown command '{0}'.</value>
  </data>
  <data name="Usage" xml:space="preserve">
    <value>Usage:</value>
  </data>
  <data name="UseDefaultSetting" xml:space="preserve">
    <value>Use default setting</value>
  </data>
  <data name="UseInstead" xml:space="preserve">
    <value>Use '{0}' instead.</value>
  </data>
  <data name="UseSystemLanguage" xml:space="preserve">
    <value>Use system language</value>
  </data>
  <data name="Verify" xml:space="preserve">
    <value>Verify</value>
  </data>
  <data name="VerifyImplementation" xml:space="preserve">
    <value>Verify implementation</value>
  </data>
  <data name="VersionInformation" xml:space="preserve">
    <value>Version information</value>
  </data>
  <data name="Working" xml:space="preserve">
    <value>Working</value>
  </data>
</root>