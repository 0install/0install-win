<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArchiveInvalid" xml:space="preserve">
    <value>The archive file is invalid or damaged.</value>
  </data>
  <data name="ArchiveInvalidPath" xml:space="preserve">
    <value>The archive contains an invalid path (potentially a security risk): {0}</value>
  </data>
  <data name="CopyFiles" xml:space="preserve">
    <value>Copying files</value>
  </data>
  <data name="DeletingDirectory" xml:space="preserve">
    <value>Deleting directory {0}</value>
  </data>
  <data name="DeletingImplementation" xml:space="preserve">
    <value>Deleting implementation {0}</value>
  </data>
  <data name="DigestMismatch" xml:space="preserve">
    <value>An implementation's manifest hash doesn't match the expected value!
Expected value: {0}
Actual value: {1}</value>
  </data>
  <data name="DirectoryNotFound" xml:space="preserve">
    <value>The directory '{0}' could not be found.</value>
  </data>
  <data name="ExtractingArchive" xml:space="preserve">
    <value>Extracting archive ({0})</value>
  </data>
  <data name="FeedNotInCache" xml:space="preserve">
    <value>'{0}' could not be located in the feed cache. Looked for file at: {1}</value>
  </data>
  <data name="FileToSignNotFound" xml:space="preserve">
    <value>The file to be signed could not be found.</value>
  </data>
  <data name="GeneratingManifest" xml:space="preserve">
    <value>Generating {0} manifest</value>
  </data>
  <data name="IllegalFileType" xml:space="preserve">
    <value>The file '{0}' is neither a symbolic link nor a regular file.</value>
  </data>
  <data name="ImplementationAlreadyInStore" xml:space="preserve">
    <value>The implementation '{0}' is already in the store.</value>
  </data>
  <data name="ImplementationNotFound" xml:space="preserve">
    <value>The implementation '{0}' could not be located.</value>
  </data>
  <data name="InsufficientFSTimeAccuracy" xml:space="preserve">
    <value>The underlying file system does not store file change times with sufficient accuracy.
If you are using a FAT-formatted drive please convert it to NTFS.</value>
  </data>
  <data name="InvalidLinesInManifest" xml:space="preserve">
    <value>The manifest file contains invalid lines.</value>
  </data>
  <data name="InvalidNumberOfLineParts" xml:space="preserve">
    <value>Invalid number of parts in line.</value>
  </data>
  <data name="InvalidSignature" xml:space="preserve">
    <value>The signature is invalid or damaged.</value>
  </data>
  <data name="InvalidUrl" xml:space="preserve">
    <value>The requested URL is invalid.</value>
  </data>
  <data name="MissingPath" xml:space="preserve">
    <value>No path specified.</value>
  </data>
  <data name="NewlineInName" xml:space="preserve">
    <value>The file or directory name must not contain a newline character.</value>
  </data>
  <data name="NoKnownDigestMethod" xml:space="preserve">
    <value>No known digest method was defined.</value>
  </data>
  <data name="NonRootedPathInConfig" xml:space="preserve">
    <value>The path '{0}' is not an absolute path. Relative paths are only allowed in portable mode.
Specified in the configuration file '{1}'.</value>
  </data>
  <data name="NumberTooLarge" xml:space="preserve">
    <value>The number value is too large.</value>
  </data>
  <data name="PathNotRelative" xml:space="preserve">
    <value>Path should be relative.</value>
  </data>
  <data name="ProblemAccessingStore" xml:space="preserve">
    <value>There was a problem accessing the implementation store '{0}'.</value>
  </data>
  <data name="ProblemAccessingStoreEx" xml:space="preserve">
    <value>There was a problem accessing the implementation store '{0}'.
Specified in the configuration file '{1}'.</value>
  </data>
  <data name="RootedPathRequired" xml:space="preserve">
    <value>A fully qualified/rooted path is required.</value>
  </data>
  <data name="RubyGemInvalid" xml:space="preserve">
    <value>Unable to find data.tar.gz inside Ruby Gem file.</value>
  </data>
  <data name="SignatureAldreadyExists" xml:space="preserve">
    <value>Signature file already exists.</value>
  </data>
  <data name="StoreServiceCommunicationProblem" xml:space="preserve">
    <value>Unable to establish connection with StoreService.</value>
  </data>
  <data name="UnableToAddImplementationToStore" xml:space="preserve">
    <value>Unable to add implementation to a store.</value>
  </data>
  <data name="UnableToFindSecretKey" xml:space="preserve">
    <value>Unable to find a secret key with the specified name.</value>
  </data>
  <data name="UnableToWriteProtect" xml:space="preserve">
    <value>Unable to enable write protection for '{0}'.</value>
  </data>
  <data name="UnknownMimeType" xml:space="preserve">
    <value>The specified MIME type is unknown.</value>
  </data>
  <data name="WrongPassphrase" xml:space="preserve">
    <value>The passphrase you entered is incorrect.</value>
  </data>
  <data name="XmlSignatureInvalidEnd" xml:space="preserve">
    <value>The last line of the file is not the end of the signature block.</value>
  </data>
  <data name="XmlSignatureMissingNewLine" xml:space="preserve">
    <value>The XML signature does not start in a new line.</value>
  </data>
  <data name="XmlSignatureNotBase64" xml:space="preserve">
    <value>The signature is not valid base 64: </value>
  </data>
</root>