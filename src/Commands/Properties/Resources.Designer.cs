//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.225
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZeroInstall.Commands.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ZeroInstall.Commands.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adding additional feed ähnelt.
        /// </summary>
        internal static string ActionAddFeed {
            get {
                return ResourceManager.GetString("ActionAddFeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Managing desktop integration ähnelt.
        /// </summary>
        internal static string ActionAppCommand {
            get {
                return ResourceManager.GetString("ActionAppCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Downloading application ähnelt.
        /// </summary>
        internal static string ActionDownload {
            get {
                return ResourceManager.GetString("ActionDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preparing to launch application ähnelt.
        /// </summary>
        internal static string ActionRun {
            get {
                return ResourceManager.GetString("ActionRun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selecting implementations ähnelt.
        /// </summary>
        internal static string ActionSelection {
            get {
                return ResourceManager.GetString("ActionSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking for updates ähnelt.
        /// </summary>
        internal static string ActionUpdate {
            get {
                return ResourceManager.GetString("ActionUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All required components have been downloaded. ähnelt.
        /// </summary>
        internal static string AllComponentsDownloaded {
            get {
                return ResourceManager.GetString("AllComponentsDownloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Application list ähnelt.
        /// </summary>
        internal static string AppList {
            get {
                return ResourceManager.GetString("AppList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; was added to the application list. ähnelt.
        /// </summary>
        internal static string AppListAdded {
            get {
                return ResourceManager.GetString("AppListAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; was removed from the application list. ähnelt.
        /// </summary>
        internal static string AppListRemoved {
            get {
                return ResourceManager.GetString("AppListRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changes found: ähnelt.
        /// </summary>
        internal static string ChangesFound {
            get {
                return ResourceManager.GetString("ChangesFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Command-line arguments: ähnelt.
        /// </summary>
        internal static string CommandLineArguments {
            get {
                return ResourceManager.GetString("CommandLineArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add an application to the application list. ähnelt.
        /// </summary>
        internal static string DescriptionAddApp {
            get {
                return ResourceManager.GetString("DescriptionAddApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Register an additional source of implementations (versions) of a program. ähnelt.
        /// </summary>
        internal static string DescriptionAddFeed {
            get {
                return ResourceManager.GetString("DescriptionAddFeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die View or change configuration settings. With no arguments, &apos;0install config&apos; displays all configuration settings. With one argument, it displays the current value of the named setting. With two arguments, it sets the setting to the given value. ähnelt.
        /// </summary>
        internal static string DescriptionConfig {
            get {
                return ResourceManager.GetString("DescriptionConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This behaves similarly to &apos;0install select&apos;, except that it also downloads the selected versions if they are not already cached. Unlike &apos;select&apos;, it does not print the selected versions by default. Returns an exit status of zero if it selected a suitable set of versions and they are now all downloaded and in the cache; returns a status of 1 otherwise. ähnelt.
        /// </summary>
        internal static string DescriptionDownload {
            get {
                return ResourceManager.GetString("DescriptionDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Import a feed from a local file, as if it had been downloaded from the network. This is useful when testing a feed file, to avoid uploading it to a remote server in order to download it again. The file must have a trusted digital signature, as when fetching from the network. ähnelt.
        /// </summary>
        internal static string DescriptionImport {
            get {
                return ResourceManager.GetString("DescriptionImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add an application to the application list (if missing) and integrate it into the desktop environment. ähnelt.
        /// </summary>
        internal static string DescriptionIntegrateApp {
            get {
                return ResourceManager.GetString("DescriptionIntegrateApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die List all known interface (program) URIs. If a search term is given, only URIs containing that string are shown (case insensitive). ähnelt.
        /// </summary>
        internal static string DescriptionList {
            get {
                return ResourceManager.GetString("DescriptionList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die List all extra feeds added to URI using &apos;0install add-feed&apos;. ähnelt.
        /// </summary>
        internal static string DescriptionListFeeds {
            get {
                return ResourceManager.GetString("DescriptionListFeeds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove an application from the application list and undoes any desktop environment integration. ähnelt.
        /// </summary>
        internal static string DescriptionRemoveApp {
            get {
                return ResourceManager.GetString("DescriptionRemoveApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Un-register a feed, reversing the effect of &apos;add-feed&apos;.  ähnelt.
        /// </summary>
        internal static string DescriptionRemoveFeed {
            get {
                return ResourceManager.GetString("DescriptionRemoveFeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This behaves similarly to &apos;0install download&apos;, except that it also runs the program after ensuring it is in the cache. Returns an exit status of 1 if the download step failed. Otherwise, the exit status will be the exit status of the program being run. ähnelt.
        /// </summary>
        internal static string DescriptionRun {
            get {
                return ResourceManager.GetString("DescriptionRun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a version of the program identified by URI, and compatible versions of all of its dependencies. Returns an exit status of zero if it selected a set of versions, and a status of 1 if it could not find a consistent set. ähnelt.
        /// </summary>
        internal static string DescriptionSelect {
            get {
                return ResourceManager.GetString("DescriptionSelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check for updates to the program and download them if found. This is similar to &apos;0install download --refresh&apos;, except that it prints information about whether any changes were found. ähnelt.
        /// </summary>
        internal static string DescriptionUpdate {
            get {
                return ResourceManager.GetString("DescriptionUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Desktop integration ähnelt.
        /// </summary>
        internal static string DesktopIntegration {
            get {
                return ResourceManager.GetString("DesktopIntegration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The requested changes to the desktop integration for &apos;{0}&apos; have been completed. ähnelt.
        /// </summary>
        internal static string DesktopIntegrationDone {
            get {
                return ResourceManager.GetString("DesktopIntegrationDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download complete ähnelt.
        /// </summary>
        internal static string DownloadComplete {
            get {
                return ResourceManager.GetString("DownloadComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The feed was already registered for all appropriate interfaces. ähnelt.
        /// </summary>
        internal static string FeedAlreadyRegistered {
            get {
                return ResourceManager.GetString("FeedAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Feed management ähnelt.
        /// </summary>
        internal static string FeedManagement {
            get {
                return ResourceManager.GetString("FeedManagement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The feed was not registered for any interfaces. ähnelt.
        /// </summary>
        internal static string FeedNotRegistered {
            get {
                return ResourceManager.GetString("FeedNotRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The feed was successfully registered for the following interfaces:
        /// {0} ähnelt.
        /// </summary>
        internal static string FeedRegistered {
            get {
                return ResourceManager.GetString("FeedRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Feeds registered for &apos;{0}&apos;: ähnelt.
        /// </summary>
        internal static string FeedsRegistered {
            get {
                return ResourceManager.GetString("FeedsRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The feed was successfully unregistered for the following interfaces:
        /// {0} ähnelt.
        /// </summary>
        internal static string FeedUnregistered {
            get {
                return ResourceManager.GetString("FeedUnregistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Found feeds: ähnelt.
        /// </summary>
        internal static string FoundFeeds {
            get {
                return ResourceManager.GetString("FoundFeeds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This program comes with ABSOLUTELY NO WARRANTY, to the extent permitted by law.
        ///You may redistribute copies of this program under the terms of the GNU Lesser General Public License. ähnelt.
        /// </summary>
        internal static string LicenseInfo {
            get {
                return ResourceManager.GetString("LicenseInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Missing arguments. ähnelt.
        /// </summary>
        internal static string MissingArguments {
            get {
                return ResourceManager.GetString("MissingArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No interface ID (feed URI or file path) was specified. ähnelt.
        /// </summary>
        internal static string NoInterfaceSpecified {
            get {
                return ResourceManager.GetString("NoInterfaceSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No longer used:  ähnelt.
        /// </summary>
        internal static string NoLongerUsed {
            get {
                return ResourceManager.GetString("NoLongerUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Can only update with Feed IDs, not with selections documents. ähnelt.
        /// </summary>
        internal static string NoSelectionsDocumentUpdate {
            get {
                return ResourceManager.GetString("NoSelectionsDocumentUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This operation is not avialable in portable mode. ähnelt.
        /// </summary>
        internal static string NotAvailableInPortableMode {
            get {
                return ResourceManager.GetString("NotAvailableInPortableMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parse hasn&apos;t been called yet. ähnelt.
        /// </summary>
        internal static string NotParsed {
            get {
                return ResourceManager.GetString("NotParsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No updates found ähnelt.
        /// </summary>
        internal static string NoUpdatesFound {
            get {
                return ResourceManager.GetString("NoUpdatesFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Applies all {CATEGORY} access points. ähnelt.
        /// </summary>
        internal static string OptionAppAdd {
            get {
                return ResourceManager.GetString("OptionAppAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {CATEGORY} must be on of the following:  ähnelt.
        /// </summary>
        internal static string OptionAppCategory {
            get {
                return ResourceManager.GetString("OptionAppCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Note: &apos;{0}&apos; are added implicitly if nothing else is sepcified. ähnelt.
        /// </summary>
        internal static string OptionAppImplicitCategory {
            get {
                return ResourceManager.GetString("OptionAppImplicitCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removes all {CATEGORY} access points. ähnelt.
        /// </summary>
        internal static string OptionAppRemove {
            get {
                return ResourceManager.GetString("OptionAppRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Run in batch mode: don&apos;t display progress reports to the user and silently answer all questions with &quot;No&quot;. Use a tray icon when in GUI mode. ähnelt.
        /// </summary>
        internal static string OptionBatch {
            get {
                return ResourceManager.GetString("OptionBatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Chosen implementation&apos;s version number must be earlier than {VERSION}. i.e., force the use of an old version the program. ähnelt.
        /// </summary>
        internal static string OptionBefore {
            get {
                return ResourceManager.GetString("OptionBefore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Instead of executing the default command, use {COMMAND} instead. Possible command names are defined in the program&apos;s interface. ähnelt.
        /// </summary>
        internal static string OptionCommand {
            get {
                return ResourceManager.GetString("OptionCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Forces the solver to target the CPU {CPU}.
        ///Supported values: i386, i486, i586, i686, x86_64, ppc, ppc64 ähnelt.
        /// </summary>
        internal static string OptionCpu {
            get {
                return ResourceManager.GetString("OptionCpu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ignore warnings and perform the operation anyway. ähnelt.
        /// </summary>
        internal static string OptionForce {
            get {
                return ResourceManager.GetString("OptionForce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Apply the configuration system-wide instead of just for the current user. ähnelt.
        /// </summary>
        internal static string OptionGlobal {
            get {
                return ResourceManager.GetString("OptionGlobal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show the graphical policy editor. This allows you to select which version of a program or library to use. ähnelt.
        /// </summary>
        internal static string OptionGui {
            get {
                return ResourceManager.GetString("OptionGui", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show the built-in help text. ähnelt.
        /// </summary>
        internal static string OptionHelp {
            get {
                return ResourceManager.GetString("OptionHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Run the specified executable {MAIN} instead of the default. If it starts with &apos;/&apos; or &apos;\&apos; then the path is relative to the implementation&apos;s top-level directory, whereas otherwise it is relative to the directory containing the default main program. ähnelt.
        /// </summary>
        internal static string OptionMain {
            get {
                return ResourceManager.GetString("OptionMain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Chosen implementation&apos;s version number must not be earlier than {VERSION}. E.g., if you want to run version 2.0 or later, use --not-before=2.0. ähnelt.
        /// </summary>
        internal static string OptionNotBefore {
            get {
                return ResourceManager.GetString("OptionNotBefore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Immediately returns once the chosen program has been launched instead of waiting for it to finish executing. ähnelt.
        /// </summary>
        internal static string OptionNoWait {
            get {
                return ResourceManager.GetString("OptionNoWait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Run in off-line mode, overriding the default setting. In off-line mode, no interfaces are refreshed even if they are out-of-date, and newer versions of programs won&apos;t be downloaded even if the injector already knows about them (e.g. from a previous refresh). ähnelt.
        /// </summary>
        internal static string OptionOffline {
            get {
                return ResourceManager.GetString("OptionOffline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Forces the solver to target the operating system {OS}.
        ///Supported values: Linux, Solaris, MacOSX, Windows ähnelt.
        /// </summary>
        internal static string OptionOS {
            get {
                return ResourceManager.GetString("OptionOS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fetch a fresh copy of all used interfaces. ähnelt.
        /// </summary>
        internal static string OptionRefresh {
            get {
                return ResourceManager.GetString("OptionRefresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Options: ähnelt.
        /// </summary>
        internal static string Options {
            get {
                return ResourceManager.GetString("Options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show were the selected components are stored on the disk. ähnelt.
        /// </summary>
        internal static string OptionShow {
            get {
                return ResourceManager.GetString("OptionShow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select source code rather than a binary. This is used internally by &apos;0compile&apos;. ähnelt.
        /// </summary>
        internal static string OptionSource {
            get {
                return ResourceManager.GetString("OptionSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die More verbose output. Use twice for even more verbose output. ähnelt.
        /// </summary>
        internal static string OptionVerbose {
            get {
                return ResourceManager.GetString("OptionVerbose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display version information. ähnelt.
        /// </summary>
        internal static string OptionVersion {
            get {
                return ResourceManager.GetString("OptionVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add {DIR} to the list of implementation caches to search.
        ///However, new downloads will not be written to this directory. ähnelt.
        /// </summary>
        internal static string OptionWithStore {
            get {
                return ResourceManager.GetString("OptionWithStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Instead of executing the chosen program directly, run {COMMAND} PROGRAM ARGS. This is useful for running debuggers and tracing tools on the program (rather than on Zero Install!). Note that the wrapper is executed in the environment selected by the program; hence, this mechanism cannot be used for sandboxing. ähnelt.
        /// </summary>
        internal static string OptionWrapper {
            get {
                return ResourceManager.GetString("OptionWrapper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Write selected versions to console as machine-readable XML. ähnelt.
        /// </summary>
        internal static string OptionXml {
            get {
                return ResourceManager.GetString("OptionXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selected implementations: ähnelt.
        /// </summary>
        internal static string SelectedImplementations {
            get {
                return ResourceManager.GetString("SelectedImplementations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Too many arguments or unknown options. ähnelt.
        /// </summary>
        internal static string TooManyArguments {
            get {
                return ResourceManager.GetString("TooManyArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Try --help with one of these: ähnelt.
        /// </summary>
        internal static string TryHelpWith {
            get {
                return ResourceManager.GetString("TryHelpWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown category: {0} ähnelt.
        /// </summary>
        internal static string UnknownCategory {
            get {
                return ResourceManager.GetString("UnknownCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown command &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string UnknownCommand {
            get {
                return ResourceManager.GetString("UnknownCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown option. ähnelt.
        /// </summary>
        internal static string UnknownOption {
            get {
                return ResourceManager.GetString("UnknownOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to check for updates ähnelt.
        /// </summary>
        internal static string UpdateProblem {
            get {
                return ResourceManager.GetString("UpdateProblem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Usage: ähnelt.
        /// </summary>
        internal static string Usage {
            get {
                return ResourceManager.GetString("Usage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Version information: ähnelt.
        /// </summary>
        internal static string VersionInformation {
            get {
                return ResourceManager.GetString("VersionInformation", resourceCulture);
            }
        }
    }
}
