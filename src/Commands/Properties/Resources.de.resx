<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActionAddFeed" xml:space="preserve">
    <value>Füge zusätzlichen Feed hinzu</value>
  </data>
  <data name="ActionDigest" xml:space="preserve">
    <value>Berechne Digest</value>
  </data>
  <data name="ActionDownload" xml:space="preserve">
    <value>Lade Anwendung runter</value>
  </data>
  <data name="ActionRun" xml:space="preserve">
    <value>Bereite Anwendungsstart vor</value>
  </data>
  <data name="ActionSelection" xml:space="preserve">
    <value>Wähle Implementierungen aus</value>
  </data>
  <data name="ActionSelfUpdate" xml:space="preserve">
    <value>Akualisiere Zero Install</value>
  </data>
  <data name="ActionUpdate" xml:space="preserve">
    <value>Suche nach Updates</value>
  </data>
  <data name="AllComponentsDownloaded" xml:space="preserve">
    <value>Alle benötigten Komponenten wurden runtergeladen.</value>
  </data>
  <data name="ChangesFound" xml:space="preserve">
    <value>Gefundene Änderungen:</value>
  </data>
  <data name="CommandLineArguments" xml:space="preserve">
    <value>Befehlszeilenargumente</value>
  </data>
  <data name="DescriptionAddFeed" xml:space="preserve">
    <value>Registriere eine zusätzliche Implementierungsquelle (Versionen) für ein Programm.</value>
  </data>
  <data name="DescriptionConfig" xml:space="preserve">
    <value>Konfigurationseinstellungen anzeigen oder verändern. Ohne Argumente zeigt es alle Einstellungen und ihre aktuellen Werte an. Mit einem Argument zeigt es den aktuellen Wert der benannten Einstellung an. Mit zwei Argumenten setzt es den Wert der benannten Einstellung.</value>
  </data>
  <data name="DescriptionDigest" xml:space="preserve">
    <value>Berechne den Manifest Digest eines Verzeichnisses oder eines Archivs.</value>
  </data>
  <data name="DescriptionDownload" xml:space="preserve">
    <value>Dieser Befehl verhält sich ähnlich zu '0install select', außer dass er die ausgewählten Versionen auch runterlädt, falls sie sich nicht bereits im Cache befinden. Im Gegensatz zu 'select' werden die ausgewählten Versionen nicht standardmäßig ausgegeben. Gibt einen Exit Status von 0 zurück falls ein geeigneter Satz an Versionen gefunden wurde und sie nun alle heruntergeladen sind und sich im Cache befinden; gibt ansonsten einen Exit Status von 1 zurück.</value>
  </data>
  <data name="DescriptionImport" xml:space="preserve">
    <value>Importiere einen Feed aus einer lokalen Datei, als wäre aus einem Netzwerk heruntergeladen worden. Dies ist praktisch um einen Feed zu testen, der nicht extra auf einem entfernten Server hochgeladen werden muss, nur um ihn wieder herunterzuladen. Diese Datei muss eine vertrauenswürdige digitale Signatur besitzen, genauso wie beim Abrufen aus dem Netzwerk.</value>
  </data>
  <data name="DescriptionList" xml:space="preserve">
    <value>Listet alle bekannten Interface (Programm-) URIs auf. Wenn eine Suchbegriff angegeben wird, werden nur URIs angezeigt die den entsprechenden Begriff enthalten (Groß- und Kleinschreibung wird ignoriert).</value>
  </data>
  <data name="DescriptionListFeeds" xml:space="preserve">
    <value>Listet alle zusätzlichen Feeds auf, die mit '0install add-feed' hinzugefügt wurden.</value>
  </data>
  <data name="DescriptionRemoveFeed" xml:space="preserve">
    <value>Entfernt einen Feed. Dies ist das Gegenstück zu 'add-feed'.</value>
  </data>
  <data name="DescriptionRun" xml:space="preserve">
    <value>Dies verhält sich ähnlich wie '0install download', mit dem Zusatz, dass das Programm gestartet wird nachdem sichergestellt ist dass es im Cache ist. Gibt den Exit-Status 1 zurück wenn der herunterladen Schritt fehlschlägt. Ansonsten wird der Exit-Status des gestarteten Programms zurückgegeben.</value>
  </data>
  <data name="DescriptionSelect" xml:space="preserve">
    <value>Wähle eine Version des Programmes aus, welches durch seine URI identifiziert wird, und kompatible Versionen aller seiner Abhängigkeiten hat. Gibt den Exit-Status 0 zurück, wenn eine Menge an Versionen ausgewählt wurde und den Status 0, wenn keine konsistente Menge gefunden werden konnte.</value>
  </data>
  <data name="DescriptionSelfUpdate" xml:space="preserve">
    <value>Aktualisiere Zero Install selber auf die neuste verfügbar Version.</value>
  </data>
  <data name="DescriptionUpdate" xml:space="preserve">
    <value>Prüft ob Updates für das Programm vorhanden sind und lädt die gefundenen herunter. Dies ist gleichbedeutend wie '0install download --refresh', mit dem Zusatz, dass Informationen über das Auffinden von Änderungen ausgegeben werden.</value>
  </data>
  <data name="DownloadComplete" xml:space="preserve">
    <value>Download abgeschlossen</value>
  </data>
  <data name="FeedAlreadyRegistered" xml:space="preserve">
    <value>Der Feed war bereits für alle passenden Interfaces registriert.</value>
  </data>
  <data name="FeedManagement" xml:space="preserve">
    <value>Feed Verwaltung</value>
  </data>
  <data name="FeedNotRegistered" xml:space="preserve">
    <value>Der Feed war für kein Interface registriert.</value>
  </data>
  <data name="FeedRegistered" xml:space="preserve">
    <value>Der Feed wurde erfolgreich für die folgenden Interfaces registriert:
{0}</value>
  </data>
  <data name="FeedsRegistered" xml:space="preserve">
    <value>Feeds registriert für '{0}':</value>
  </data>
  <data name="FeedUnregistered" xml:space="preserve">
    <value>Der Feed wurde erfolgreich für die folgenden Interfaces deregistriert:
{0}</value>
  </data>
  <data name="FileOrDirNotFound" xml:space="preserve">
    <value>Konnte die Datei oder das Verzeichnis '{0}' nicht finden.</value>
  </data>
  <data name="FoundFeeds" xml:space="preserve">
    <value>Gefundene Feeds:</value>
  </data>
  <data name="LicenseInfo" xml:space="preserve">
    <value>Für dieses Programm gibt es ABSOLUT KEINE GARANTIEN, soweit dies gesetzlich zulässig ist.
Sie dürfen unter den Bedingungen der GNU Lesser General Public License Kopien dieses Programmes weitergeben.</value>
  </data>
  <data name="MissingArguments" xml:space="preserve">
    <value>Keine Argumente vorhanden.</value>
  </data>
  <data name="MissingFeedFor" xml:space="preserve">
    <value>Fehlendes &lt;feed-for&gt; Element in '{0}'. Es kann nicht als Feed für ein anderes Interface verwendet werden.</value>
  </data>
  <data name="MissingOptionValue" xml:space="preserve">
    <value>Fehlender benötigter Wert für die Option {0}.</value>
  </data>
  <data name="NoInterfaceSpecified" xml:space="preserve">
    <value>Es wurde keine Interface ID (Feed URI oder Dateipfad) angegeben.</value>
  </data>
  <data name="NoLongerUsed" xml:space="preserve">
    <value>Nicht mehr verwendet: </value>
  </data>
  <data name="NoSelectionsDocumentUpdate" xml:space="preserve">
    <value>Kann nur mit Feed IDs aktualisieren, nicht mit Selections Dokumenten.</value>
  </data>
  <data name="NotParsed" xml:space="preserve">
    <value>Parse wurde noch nicht aufgerufen.</value>
  </data>
  <data name="NoUpdatesFound" xml:space="preserve">
    <value>Keine Updates gefunden</value>
  </data>
  <data name="OptionAlgorithm" xml:space="preserve">
    <value>Der {HASH} algorithmus der für den Digest verwendet werden soll.</value>
  </data>
  <data name="OptionBatch" xml:space="preserve">
    <value>Im Stapelverarbeitungsmodus ausführen: dem Benutzer keine Meldungen zeigen und Rückfragen stillschweigend mit "Nein" beantworten.</value>
  </data>
  <data name="OptionBefore" xml:space="preserve">
    <value>Die Version der ausgewählten Implementierung muss vor {VERSION} liegen. Zum Beispiel können Sie damit die Verwendung einer ältere Version des Programmes erzwingen.</value>
  </data>
  <data name="OptionCommand" xml:space="preserve">
    <value>Anstelle der Ausführung des Standardkommandos, verwenden Sie {COMMAND}. Mögliche Kommandos sind im Programminterface spezifiziert.</value>
  </data>
  <data name="OptionCpu" xml:space="preserve">
    <value>Zwingt den Solver auf eine bestimmte {CPU} abzuzielen.</value>
  </data>
  <data name="OptionForceSelfUpdate" xml:space="preserve">
    <value>Führe das Update durch, auch wenn die derzeit installierte Version die gleiche oder neuer ist.</value>
  </data>
  <data name="OptionGui" xml:space="preserve">
    <value>Zeigt den grafischen Versionseditor an. Dies gestattet Ihnen die Version des Programmes oder der Bibliothek auszuwählen.</value>
  </data>
  <data name="OptionHelp" xml:space="preserve">
    <value>Zeigt den eingebauten Hilfe-Text an.</value>
  </data>
  <data name="OptionMain" xml:space="preserve">
    <value>Starte die spezifizierte ausführbare Datei {MAIN} anstellte des Standards. Beginnt der Pfad mit '/' oder '\', ist er relativ zum obersten Verzeichnis der Implementierung. Andernfalls ist er relativ zum Verzeichnis welches das Standardhauptprogramm enthält.
Darf keine Befehlszeilenargumente enthalten! Leerzeichen müssen nicht escaped werden.</value>
  </data>
  <data name="OptionNotBefore" xml:space="preserve">
    <value>Die Version der ausgewählten Implementierung muss nach {VERSION} liegen. Zum Beispiel können Sie damit eine Version 2.0 oder eine spätere starten, in dem Sie '--not-before=2.0' angeben.</value>
  </data>
  <data name="OptionNoWait" xml:space="preserve">
    <value>Der Befehlt wird sofort beendet, sobald das Programm gestartet wurde, anstelle auf dessen Beendigung zu warten.</value>
  </data>
  <data name="OptionOffline" xml:space="preserve">
    <value>Startet im Offline-Modus und überschreibt dabei die Standardeinstellung. Im Offline-Modus wird kein Interface erneuert, auch wenn es veraltet ist und neuere Versionen des Programms werden nicht heruntergeladen, auch wenn der Injektor sie kennt (zum Beispiel durch eine frühere Erneuerung).</value>
  </data>
  <data name="OptionOS" xml:space="preserve">
    <value>Zwingt den Solver auf ein bestimmtes Betriebssystem {OS} abzuzielen.</value>
  </data>
  <data name="OptionRefresh" xml:space="preserve">
    <value>Rufe aktualisierte Kopien aller verwendeten Feeds ab.</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Optionen:</value>
  </data>
  <data name="OptionShow" xml:space="preserve">
    <value>Zeige an wo die ausgewählten Komponenten auf dem Datenträger gespeichert sind.</value>
  </data>
  <data name="OptionSource" xml:space="preserve">
    <value>Wählt Quellecode anstelle einer Binärdatei aus. Dies wird intern von '0compile' verwendet.</value>
  </data>
  <data name="OptionVerbose" xml:space="preserve">
    <value>Ausführlichere Ausgaben. Verwenden Sie die Option zweimal um noch ausführlicher informiert zu werden.</value>
  </data>
  <data name="OptionVersion" xml:space="preserve">
    <value>Zeigt Versionsinformationen an.</value>
  </data>
  <data name="OptionWithStore" xml:space="preserve">
    <value>Füge {DIR} zu der Liste der zu Durchsuchenden Implementierungscaches hinzu.
Trotzdem werden neue Downloads nicht in dieses Verzeichnis gespeichert.</value>
  </data>
  <data name="OptionWrapper" xml:space="preserve">
    <value>Anstelle das ausgewählte Programm direkt auszuführen, führe {COMMAND} PROGRAM ARGS aus. Dies ist nützlich um Debugger und Tracing Tools auf das Programm anzuwenden (anstatt auf Zero Install!).  Beachten Sie, dass der Wrapper in der vom Programm festgelegten Umgebung ausgeführt wird. Somit ist dieser Mechanismus nicht für Sandboxing geeignet.
Darf Befehlszeilenargumente enthalten. Leerzeichen müssen escaped werden!</value>
  </data>
  <data name="OptionXml" xml:space="preserve">
    <value>Scheibe ausgewählte Versionen auf die Konsole als Maschinen-lesbares XML.</value>
  </data>
  <data name="PortableMode" xml:space="preserve">
    <value>Portable Modus</value>
  </data>
  <data name="SelectedImplementations" xml:space="preserve">
    <value>Ausgewählte Implementierungen:</value>
  </data>
  <data name="SupportedValues" xml:space="preserve">
    <value>Unterstützte Werte: {0}</value>
  </data>
  <data name="TooManyArguments" xml:space="preserve">
    <value>Zu viele Argumente oder unbekannte Optionen.</value>
  </data>
  <data name="TryHelpWith" xml:space="preserve">
    <value>Probieren Sie --help mit einem der folgenden:</value>
  </data>
  <data name="UnknownCommand" xml:space="preserve">
    <value>Unbekannter Befehl '{0}'.</value>
  </data>
  <data name="UnknownOption" xml:space="preserve">
    <value>Unbekannte Option.</value>
  </data>
  <data name="UpdateProblem" xml:space="preserve">
    <value>Konnte nicht nach Updates suchen</value>
  </data>
  <data name="Usage" xml:space="preserve">
    <value>Verwendung:</value>
  </data>
  <data name="VersionInformation" xml:space="preserve">
    <value>Versionsinformationen:</value>
  </data>
</root>