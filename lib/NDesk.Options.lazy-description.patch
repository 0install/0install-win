# Bastian Eicher <bastian@eicher.net>
Lazy evaluation for Option.Description

diff -r b4a8d158afc5 -r df9918eb5451 src/Options.cs
--- a/src/Options.cs	Tue Jun 25 15:17:22 2013 +0200
+++ b/src/Options.cs	Tue Jun 25 15:37:24 2013 +0200
@@ -282,19 +282,23 @@
 		Required,
 	}
 
+	public delegate string LazyString();
+
 	public abstract class Option {
-		string prototype, description;
+		string prototype;
+		LazyString description;
+		private string descriptionCached;
 		string[] names;
 		OptionValueType type;
 		int count;
 		string[] separators;
 
-		protected Option (string prototype, string description)
+		protected Option (string prototype, LazyString description)
 			: this (prototype, description, 1)
 		{
 		}
 
-		protected Option (string prototype, string description, int maxValueCount)
+		protected Option (string prototype, LazyString description, int maxValueCount)
 		{
 			if (prototype == null)
 				throw new ArgumentNullException ("prototype");
@@ -327,7 +331,7 @@
 		}
 
 		public string           Prototype       {get {return prototype;}}
-		public string           Description     {get {return description;}}
+		public string           Description     {get {return descriptionCached ?? (descriptionCached = description());}}
 		public OptionValueType  OptionValueType {get {return type;}}
 		public int              MaxValueCount   {get {return count;}}
 
@@ -593,7 +597,7 @@
 		sealed class ActionOption : Option {
 			Action<OptionValueCollection> action;
 
-			public ActionOption (string prototype, string description, int count, Action<OptionValueCollection> action)
+			public ActionOption (string prototype, LazyString description, int count, Action<OptionValueCollection> action)
 				: base (prototype, description, count)
 			{
 				if (action == null)
@@ -612,7 +616,7 @@
 			return Add (prototype, null, action);
 		}
 
-		public OptionSet Add (string prototype, string description, Action<string> action)
+		public OptionSet Add (string prototype, LazyString description, Action<string> action)
 		{
 			if (action == null)
 				throw new ArgumentNullException ("action");
@@ -627,7 +631,7 @@
 			return Add (prototype, null, action);
 		}
 
-		public OptionSet Add (string prototype, string description, OptionAction<string, string> action)
+		public OptionSet Add (string prototype, LazyString description, OptionAction<string, string> action)
 		{
 			if (action == null)
 				throw new ArgumentNullException ("action");
@@ -640,7 +644,7 @@
 		sealed class ActionOption<T> : Option {
 			Action<T> action;
 
-			public ActionOption (string prototype, string description, Action<T> action)
+			public ActionOption (string prototype, LazyString description, Action<T> action)
 				: base (prototype, description, 1)
 			{
 				if (action == null)
@@ -657,7 +661,7 @@
 		sealed class ActionOption<TKey, TValue> : Option {
 			OptionAction<TKey, TValue> action;
 
-			public ActionOption (string prototype, string description, OptionAction<TKey, TValue> action)
+			public ActionOption (string prototype, LazyString description, OptionAction<TKey, TValue> action)
 				: base (prototype, description, 2)
 			{
 				if (action == null)
@@ -678,7 +682,7 @@
 			return Add (prototype, null, action);
 		}
 
-		public OptionSet Add<T> (string prototype, string description, Action<T> action)
+		public OptionSet Add<T> (string prototype, LazyString description, Action<T> action)
 		{
 			return Add (new ActionOption<T> (prototype, description, action));
 		}
@@ -688,7 +692,7 @@
 			return Add (prototype, null, action);
 		}
 
-		public OptionSet Add<TKey, TValue> (string prototype, string description, OptionAction<TKey, TValue> action)
+		public OptionSet Add<TKey, TValue> (string prototype, LazyString description, OptionAction<TKey, TValue> action)
 		{
 			return Add (new ActionOption<TKey, TValue> (prototype, description, action));
 		}
