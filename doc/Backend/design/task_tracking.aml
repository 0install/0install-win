<?xml version="1.0" encoding="utf-8"?>
<topic id="design_task_tracking" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <title>Task tracking</title>

    <introduction>
      <para>
        Zero Install operations often start off with simple method calls that
        end up triggering numerous of secondary tasks. For example, a method
        designed to launch an application may trigger downloads and archive
        extractions for missing implementations. Such methods have a parameter
        that allows you to provide a callback object to be informed about new
        trackable tasks.
      </para>
    </introduction>

    <section address="callback">
      <title>Callback delegates</title>
      <content>
        <para>
          When you call a method that triggers background tasks, the method
          itself will run synchronously and only return once the entire
          operation has been completed. The callback object may be called
          intermittently and indicate that a new background task has been
          started and may now be tracked. The callbacks will block the original
          method. Therefor you should only use them to set up progress tracking
          for the new task in a separate thread and return as soon as possible.
        </para>
      </content>
    </section>

    <relatedTopics>
      <link xlink:href="user_task_tracking">User guide for task tracking</link>
    </relatedTopics>
  </developerConceptualDocument>
</topic>
